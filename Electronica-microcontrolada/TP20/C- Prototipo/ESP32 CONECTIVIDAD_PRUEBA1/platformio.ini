; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32dev]
platform = espressif32
board = esp32dev
framework = arduino

#include <WiFi.h>

const char* ssid = "test123";
const char* password = "test123";

void setup() {
  Serial.begin(115200);

  WiFi.begin(ssid, password);

  Serial.print("Conectando a WiFi...");
  int intentosConexion = 0;
  const int maxIntentosConexion = 20; // M치ximo de intentos de conexi칩n
  while (WiFi.status() != WL_CONNECTED && intentosConexion < maxIntentosConexion) {
    delay(500);
    Serial.print(".");
    intentosConexion++;
  }

  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("");
    Serial.println("Conectado!");
    Serial.print("Direccion IP asignada: ");
    Serial.println(WiFi.localIP());
  } else {
    Serial.println("");
    Serial.println("Error al conectar a la red WiFi.");
  }
}

void loop() {
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("Desconectado de red WiFi, intentando reconectar...");
    WiFi.reconnect();

    int intentosReconexion = 0;
    const int maxIntentosReconexion = 10; // M치ximo de intentos de reconexi칩n
    while (WiFi.status() != WL_CONNECTED && intentosReconexion < maxIntentosReconexion) {
      delay(1000);
      Serial.print(".");
      intentosReconexion++;
    }

    if (WiFi.status() == WL_CONNECTED) {
      Serial.println("");
      Serial.println("Reconectado a red WiFi.");
    } else {
      Serial.println("");
      Serial.println("Error al reconectar a la red WiFi.");
    }
  }

  delay(10000); // Pausa de 10 segundos antes de verificar nuevamente
}